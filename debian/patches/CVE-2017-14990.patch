Description: Use hash for user activation key
 Removes cleartext of the user activation key
 CVE-2017-14990
Author: timdxw
Origin: upstream, https://core.trac.wordpress.org/ticket/38474
Bug-Debian: https://bugs.debian.org/877629
Reviewed-by: Craig Small <csmall@debian.org>
Reviewed-by: Sylvain Beucler <beuc@debian.org>
Last-Update: 2020-09-09
Index: wordpress-4.7.18/wp-activate.php
===================================================================
--- wordpress-4.7.18.orig/wp-activate.php
+++ wordpress-4.7.18/wp-activate.php
@@ -42,13 +42,15 @@ if ( $key ) {
 		wp_safe_redirect( $redirect_url );
 		exit;
 	} else {
-		$result = wpmu_activate_signup( $key );
+		$signup_id = !empty($_GET['signup_id']) ? $_GET['signup_id'] : $_POST['signup_id'];
+		$result = wpmu_activate_signup( $key, $signup_id );
 	}
 }
 
 if ( $result === null && isset( $_COOKIE[ $activate_cookie ] ) ) {
 	$key    = $_COOKIE[ $activate_cookie ];
-	$result = wpmu_activate_signup( $key );
+	$signup_id = !empty($_GET['signup_id']) ? $_GET['signup_id'] : $_POST['signup_id'];
+	$result = wpmu_activate_signup( $key, $signup_id );
 	setcookie( $activate_cookie, ' ', time() - YEAR_IN_SECONDS, $activate_path, COOKIE_DOMAIN, is_ssl(), true );
 }
 
@@ -126,6 +128,10 @@ get_header( 'wp-activate' );
 			    <label for="key"><?php _e('Activation Key:') ?></label>
 			    <br /><input type="text" name="key" id="key" value="" size="50" />
 			</p>
+			<p>
+			    <label for="key"><?php _e('Signup ID:') ?></label>
+			    <br /><input type="number" name="signup_id" id="signup_id" value="" size="50" />
+			</p>
 			<p class="submit">
 			    <input id="submit" type="submit" name="Submit" class="submit" value="<?php esc_attr_e('Activate') ?>" />
 			</p>
Index: wordpress-4.7.18/wp-admin/user-new.php
===================================================================
--- wordpress-4.7.18.orig/wp-admin/user-new.php
+++ wordpress-4.7.18/wp-admin/user-new.php
@@ -153,8 +153,8 @@ Please click the following link to confi
 			}
 			wpmu_signup_user( $new_user_login, $new_user_email, array( 'add_to_blog' => $wpdb->blogid, 'new_role' => $_REQUEST['role'] ) );
 			if ( isset( $_POST[ 'noconfirmation' ] ) && current_user_can( 'manage_network_users' ) ) {
-				$key = $wpdb->get_var( $wpdb->prepare( "SELECT activation_key FROM {$wpdb->signups} WHERE user_login = %s AND user_email = %s", $new_user_login, $new_user_email ) );
-				$new_user = wpmu_activate_signup( $key );
+				$results = $wpdb->get_results( $wpdb->prepare( "SELECT activation_key, signup_id FROM {$wpdb->signups} WHERE user_login = %s AND user_email = %s", $new_user_login, $new_user_email ) );
+				$new_user = wpmu_activate_signup( $results[0]['activation_key'], $results[0]['signup_id'] );
 				if ( is_wp_error( $new_user ) ) {
 					$redirect = add_query_arg( array( 'update' => 'addnoconfirmation' ), 'user-new.php' );
 				} else {
Index: wordpress-4.7.18/wp-includes/ms-default-filters.php
===================================================================
--- wordpress-4.7.18.orig/wp-includes/ms-default-filters.php
+++ wordpress-4.7.18/wp-includes/ms-default-filters.php
@@ -26,7 +26,7 @@ add_action( 'init', 'maybe_add_existing_
 add_action( 'wpmu_new_user', 'newuser_notify_siteadmin' );
 add_action( 'wpmu_activate_user', 'add_new_user_to_blog', 10, 3 );
 add_action( 'wpmu_activate_user', 'wpmu_welcome_user_notification', 10, 3 );
-add_action( 'after_signup_user', 'wpmu_signup_user_notification', 10, 4 );
+add_action( 'after_signup_user', 'wpmu_signup_user_notification', 10, 5 );
 add_action( 'network_site_new_created_user',   'wp_send_new_user_notifications' );
 add_action( 'network_site_users_created_user', 'wp_send_new_user_notifications' );
 add_action( 'network_user_new_created_user',   'wp_send_new_user_notifications' );
@@ -37,7 +37,7 @@ add_filter( 'wpmu_validate_blog_signup',
 add_action( 'wpmu_new_blog', 'wpmu_log_new_registrations', 10, 2 );
 add_action( 'wpmu_new_blog', 'newblog_notify_siteadmin', 10, 2 );
 add_action( 'wpmu_activate_blog', 'wpmu_welcome_notification', 10, 5 );
-add_action( 'after_signup_site', 'wpmu_signup_blog_notification', 10, 7 );
+add_action( 'after_signup_site', 'wpmu_signup_blog_notification', 10, 8 );
 
 // Register Nonce
 add_action( 'signup_hidden_fields', 'signup_nonce_fields' );
Index: wordpress-4.7.18/wp-includes/ms-functions.php
===================================================================
--- wordpress-4.7.18.orig/wp-includes/ms-functions.php
+++ wordpress-4.7.18/wp-includes/ms-functions.php
@@ -667,11 +667,17 @@ function wpmu_validate_blog_signup( $blo
  * @param array  $meta       By default, contains the requested privacy setting and lang_id.
  */
 function wpmu_signup_blog( $domain, $path, $title, $user, $user_email, $meta = array() )  {
-	global $wpdb;
+	global $wpdb, $wp_hasher;
 
 	$key = substr( md5( time() . wp_rand() . $domain ), 0, 16 );
 	$meta = serialize($meta);
 
+	if ( empty( $wp_hasher ) ) {
+		$wp_hasher = new PasswordHash( 8, true );
+	}
+
+	$hashed = $wp_hasher->HashPassword( $key );
+
 	$wpdb->insert( $wpdb->signups, array(
 		'domain' => $domain,
 		'path' => $path,
@@ -679,7 +685,7 @@ function wpmu_signup_blog( $domain, $pat
 		'user_login' => $user,
 		'user_email' => $user_email,
 		'registered' => current_time('mysql', true),
-		'activation_key' => $key,
+		'activation_key' => $hashed,
 		'meta' => $meta
 	) );
 
@@ -695,8 +701,9 @@ function wpmu_signup_blog( $domain, $pat
 	 * @param string $user_email The user's email address.
 	 * @param string $key        The user's activation key
 	 * @param array  $meta       By default, contains the requested privacy setting and lang_id.
+	 * @param int    $signup_id  Signup ID.
 	 */
-	do_action( 'after_signup_site', $domain, $path, $title, $user, $user_email, $key, $meta );
+	do_action( 'after_signup_site', $domain, $path, $title, $user, $user_email, $key, $meta, $wpdb->insert_id );
 }
 
 /**
@@ -714,7 +721,7 @@ function wpmu_signup_blog( $domain, $pat
  * @param array  $meta       By default, this is an empty array.
  */
 function wpmu_signup_user( $user, $user_email, $meta = array() ) {
-	global $wpdb;
+	global $wpdb, $wp_hasher;
 
 	// Format data
 	$user = preg_replace( '/\s+/', '', sanitize_user( $user, true ) );
@@ -722,6 +729,12 @@ function wpmu_signup_user( $user, $user_
 	$key = substr( md5( time() . wp_rand() . $user_email ), 0, 16 );
 	$meta = serialize($meta);
 
+	if ( empty( $wp_hasher ) ) {
+		$wp_hasher = new PasswordHash( 8, true );
+	}
+
+	$hashed = $wp_hasher->HashPassword( $key );
+
 	$wpdb->insert( $wpdb->signups, array(
 		'domain' => '',
 		'path' => '',
@@ -729,7 +742,7 @@ function wpmu_signup_user( $user, $user_
 		'user_login' => $user,
 		'user_email' => $user_email,
 		'registered' => current_time('mysql', true),
-		'activation_key' => $key,
+		'activation_key' => $hashed,
 		'meta' => $meta
 	) );
 
@@ -742,8 +755,9 @@ function wpmu_signup_user( $user, $user_
 	 * @param string $user_email The user's email address.
 	 * @param string $key        The user's activation key
 	 * @param array  $meta       Additional signup meta. By default, this is an empty array.
+	 * @param int    $signup_id  Signup ID.
 	 */
-	do_action( 'after_signup_user', $user, $user_email, $key, $meta );
+	do_action( 'after_signup_user', $user, $user_email, $key, $meta, $wpdb->insert_id );
 }
 
 /**
@@ -768,9 +782,10 @@ function wpmu_signup_user( $user, $user_
  * @param string $user_email The user's email address.
  * @param string $key        The activation key created in wpmu_signup_blog()
  * @param array  $meta       By default, contains the requested privacy setting and lang_id.
+ * @param int    $signup_id  Signup ID.
  * @return bool
  */
-function wpmu_signup_blog_notification( $domain, $path, $title, $user_login, $user_email, $key, $meta = array() ) {
+function wpmu_signup_blog_notification( $domain, $path, $title, $user_login, $user_email, $key, $meta = array(), $signup_id ) {
 	/**
 	 * Filters whether to bypass the new site email notification.
 	 *
@@ -790,9 +805,9 @@ function wpmu_signup_blog_notification(
 
 	// Send email with activation link.
 	if ( !is_subdomain_install() || get_current_network_id() != 1 )
-		$activate_url = network_site_url("wp-activate.php?key=$key");
+		$activate_url = network_site_url("wp-activate.php?key=$key&signup_id=$signup_id");
 	else
-		$activate_url = "http://{$domain}{$path}wp-activate.php?key=$key"; // @todo use *_url() API
+		$activate_url = "http://{$domain}{$path}wp-activate.php?key=$key&signup_id=$signup_id"; // @todo use *_url() API
 
 	$activate_url = esc_url($activate_url);
 	$admin_email = get_site_option( 'admin_email' );
@@ -881,9 +896,10 @@ function wpmu_signup_blog_notification(
  * @param string $user_email The user's email address.
  * @param string $key        The activation key created in wpmu_signup_user()
  * @param array  $meta       By default, an empty array.
+ * @param int    $signup_id  Signup ID.
  * @return bool
  */
-function wpmu_signup_user_notification( $user_login, $user_email, $key, $meta = array() ) {
+function wpmu_signup_user_notification( $user_login, $user_email, $key, $meta = array(), $signup_id ) {
 	/**
 	 * Filters whether to bypass the email notification for new user sign-up.
 	 *
@@ -924,7 +940,7 @@ function wpmu_signup_user_notification(
 			__( "To activate your user, please click the following link:\n\n%s\n\nAfter you activate, you will receive *another email* with your login." ),
 			$user_login, $user_email, $key, $meta
 		),
-		site_url( "wp-activate.php?key=$key" )
+		site_url( "wp-activate.php?key=$key&signup_id=$signup_id" )
 	);
 	// TODO: Don't hard code activation link.
 	$subject = sprintf(
@@ -969,15 +985,25 @@ function wpmu_signup_user_notification(
  * @global wpdb $wpdb WordPress database abstraction object.
  *
  * @param string $key The activation key provided to the user.
+ * @param int $signup_id The Signup ID.
  * @return array|WP_Error An array containing information about the activated user and/or blog
  */
-function wpmu_activate_signup($key) {
-	global $wpdb;
+function wpmu_activate_signup( $key, $signup_id ) {
+	global $wpdb, $wp_hasher;
 
-	$signup = $wpdb->get_row( $wpdb->prepare("SELECT * FROM $wpdb->signups WHERE activation_key = %s", $key) );
+	$signup = $wpdb->get_row( $wpdb->prepare( "SELECT * FROM $wpdb->signups WHERE signup_id = %d", $signup_id ) );
 
-	if ( empty( $signup ) )
+	if ( empty( $signup ) ) {
+		return new WP_Error( 'invalid_id', __( 'Invalid signup ID.' ) );
+	}
+
+	if ( empty( $wp_hasher ) ) {
+		$wp_hasher = new PasswordHash( 8, true );
+	}
+
+	if ( ! $wp_hasher->CheckPassword( $key, $signup->activation_key ) ) {
 		return new WP_Error( 'invalid_key', __( 'Invalid activation key.' ) );
+	}
 
 	if ( $signup->active ) {
 		if ( empty( $signup->domain ) )
